{
  "version": 3,
  "sources": ["../CommandManager.ts"],
  "sourcesContent": ["/**\n*  ZS 19/03/22\n*  This function will update the servers available commands and attatch the relevant \n*  listeners to the passed in discord client object. Refering to: \n*  \"https://discordjs.guide/interactions/slash-commands.html#registering-slash-commands\"\n**/\nexport function UploadCommands(client){\n\n  //Update this list when attaching the bot to new servers with the relevant serverID (aka guildID)\n  const serverIDs: string[] = [\"692837882343325770\",\"279615532863324160\"];\n  \n  const clientID = \"954409833203916860\";\n  const token =  process.env['Discord_Token'];\n  const fs = require('node:fs');\n  const {REST} = require('@discordjs/rest');\n  const {Routes} = require('discord-api-types/v9');\n  const {Collection} = require('discord.js');\n\n  //Populate The commands from the commands folder, we put them in json format and also attact the listners\n  let commands = [];\n  let commandFiles = fs.readdirSync('./commands').filter(file => file.endsWith('.ts'));\n  client.commands = new Collection();\n\n  for (const file of commandFiles) {\n    //N.B. The file is changed at compile time so we account for the future\n  \tconst command = require(`./commands/${file}`.replace('.ts','.js')); \n  \tclient.commands.set(command.data.name, command);\n    commands.push(command.data.toJSON());\n  }\n\n\n  //Send a put request with all the commands to the relevant servers\n  const rest = new REST({ version: '9' }).setToken(token);\n  (async () => {\n    serverIDs.forEach(async (guildID) => {\n    \ttry {\n    \t\tconsole.log('Started refreshing '+guildID+' (/) commands.');\n    \n    \t\tawait rest.put(\n    \t\t\tRoutes.applicationGuildCommands(clientID, guildID),\n    \t\t\t{ \n            body: commands\n          },\n    \t\t);\n    \n    \t\tconsole.log('Successfully reloaded '+guildID+' (/) commands.');\n    \t} catch (error) {\n    \t\tconsole.error(error);\n    \t}\n    });\n  })();\n}"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAMO,wBAAwB,QAAO;AAGpC,QAAM,YAAsB,CAAC,sBAAqB;AAElD,QAAM,WAAW;AACjB,QAAM,QAAS,QAAQ,IAAI;AAC3B,QAAM,KAAK,QAAQ;AACnB,QAAM,EAAC,SAAQ,QAAQ;AACvB,QAAM,EAAC,WAAU,QAAQ;AACzB,QAAM,EAAC,eAAc,QAAQ;AAG7B,MAAI,WAAW;AACf,MAAI,eAAe,GAAG,YAAY,cAAc,OAAO,UAAQ,KAAK,SAAS;AAC7E,SAAO,WAAW,IAAI;AAEtB,aAAW,QAAQ,cAAc;AAEhC,UAAM,UAAU,QAAQ,cAAc,OAAO,QAAQ,OAAM;AAC3D,WAAO,SAAS,IAAI,QAAQ,KAAK,MAAM;AACtC,aAAS,KAAK,QAAQ,KAAK;AAAA;AAK7B,QAAM,OAAO,IAAI,KAAK,EAAE,SAAS,OAAO,SAAS;AACjD,EAAC,aAAY;AACX,cAAU,QAAQ,OAAO,YAAY;AACpC,UAAI;AACH,gBAAQ,IAAI,wBAAsB,UAAQ;AAE1C,cAAM,KAAK,IACV,OAAO,yBAAyB,UAAU,UAC1C;AAAA,UACK,MAAM;AAAA;AAIZ,gBAAQ,IAAI,2BAAyB,UAAQ;AAAA,eACrC,OAAP;AACD,gBAAQ,MAAM;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
