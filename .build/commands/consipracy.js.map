{
  "version": 3,
  "sources": ["../../commands/consipracy.ts"],
  "sourcesContent": ["/**\n*  ZS 19/03/22\n*  Reboot of sheelBot conspiracies, two sub commands allow adding new conspiracies and then telling a random conspiracy.\n**/\n\nconst {SlashCommandBuilder} = require('@discordjs/builders');\n\nconst Database = require(\"@replit/database\")\nconst databaseName = \"rb_conspiracies\"\nconst database = new Database()\n\nlet conspiracies:string[];\ndatabase.get(databaseName).then(value =>{conspiracies = value });\n\nmodule.exports = {\n  data: new SlashCommandBuilder()\n    .setName('conspiracy')\n    .setDescription('add and tell conspiracies')\n    .addSubcommand( subcommand =>\n      subcommand\n        .setName('add')\n        .setDescription('Add a conspiracy.')\n        .addStringOption(option => \n          option.setName('text')\n          .setDescription('The conspiracy to add.')\n          .setRequired(true)))\n    .addSubcommand( subcommand =>\n      subcommand\n        .setName('tell')\n        .setDescription('Tell a random consipracy.'))\n    .addSubcommand( subcommand =>\n      subcommand\n        .setName('delete')\n        .setDescription('Delete a conspiracy.')\n        .addIntegerOption(option => \n          option.setName('position')\n          .setDescription('The index of the conspiracy to delete.')\n          .setRequired(true))),\n  \n  async execute(interaction) {\n    if (interaction.options.getSubcommand() === 'add') {\n      let conspiracy = interaction.options.getString(\"text\");\n      conspiracies.push(conspiracy);\n      database.set(databaseName, conspiracies).then(() => {});\n      await interaction.reply('Added conspiracy: '+conspiracy );\n    }else if (interaction.options.getSubcommand() === 'delete') { \n      let i = interaction.options.getInteger(\"position\")-1;\n      let conspiracy = conspiracies[i];\n      conspiracies.splice(i,1);\n      database.set(databaseName, conspiracies).then(() => {});\n      await interaction.reply('Deleted conspiracy: '+conspiracy);\n    }\n    else{  \n       let i = Math.floor(Math.random() * conspiracies.length)\n       let randomElement = conspiracies[i];\n       await interaction.reply((i+1)+\". \"+randomElement)\n    }\n  },\n};\n\n"],
  "mappings": "AAKA,MAAM,EAAC,wBAAuB,QAAQ;AAEtC,MAAM,WAAW,QAAQ;AACzB,MAAM,eAAe;AACrB,MAAM,WAAW,IAAI;AAErB,IAAI;AACJ,SAAS,IAAI,cAAc,KAAK,WAAQ;AAAC,iBAAe;AAAA;AAExD,OAAO,UAAU;AAAA,EACf,MAAM,IAAI,sBACP,QAAQ,cACR,eAAe,6BACf,cAAe,gBACd,WACG,QAAQ,OACR,eAAe,qBACf,gBAAgB,YACf,OAAO,QAAQ,QACd,eAAe,0BACf,YAAY,QAClB,cAAe,gBACd,WACG,QAAQ,QACR,eAAe,8BACnB,cAAe,gBACd,WACG,QAAQ,UACR,eAAe,wBACf,iBAAiB,YAChB,OAAO,QAAQ,YACd,eAAe,0CACf,YAAY;AAAA,QAEf,QAAQ,aAAa;AACzB,QAAI,YAAY,QAAQ,oBAAoB,OAAO;AACjD,UAAI,aAAa,YAAY,QAAQ,UAAU;AAC/C,mBAAa,KAAK;AAClB,eAAS,IAAI,cAAc,cAAc,KAAK,MAAM;AAAA;AACpD,YAAM,YAAY,MAAM,uBAAqB;AAAA,eACrC,YAAY,QAAQ,oBAAoB,UAAU;AAC1D,UAAI,IAAI,YAAY,QAAQ,WAAW,cAAY;AACnD,UAAI,aAAa,aAAa;AAC9B,mBAAa,OAAO,GAAE;AACtB,eAAS,IAAI,cAAc,cAAc,KAAK,MAAM;AAAA;AACpD,YAAM,YAAY,MAAM,yBAAuB;AAAA,WAE7C;AACD,UAAI,IAAI,KAAK,MAAM,KAAK,WAAW,aAAa;AAChD,UAAI,gBAAgB,aAAa;AACjC,YAAM,YAAY,MAAO,IAAE,IAAG,OAAK;AAAA;AAAA;AAAA;",
  "names": []
}
