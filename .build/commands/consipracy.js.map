{
  "version": 3,
  "sources": ["../../commands/consipracy.ts"],
  "sourcesContent": ["const {SlashCommandBuilder} = require('@discordjs/builders');\n\nconst Database = require(\"@replit/database\")\nconst databaseName = \"rb_conspiracies\"\nconst database = new Database()\n\nlet conspiracies:string[];\ndatabase.get(databaseName).then(value =>{conspiracies = value });\n\nmodule.exports = {\n  data: new SlashCommandBuilder()\n    .setName('conspiracy')\n    .setDescription('add and tell conspiracies')\n    .addSubcommand( subcommand =>\n      subcommand\n        .setName('add')\n        .setDescription('Add a conspiracy.')\n        .addStringOption(option => \n          option.setName('text')\n          .setDescription('The conspiracy to add.')\n          .setRequired(true)))\n    .addSubcommand( subcommand =>\n      subcommand\n        .setName('tell')\n        .setDescription('Tell a random consipracy.')),\n  \n  async execute(interaction) {\n    if (interaction.options.getSubcommand() === 'add') {\n      conspiracies.push(interaction.options.getString(\"text\"))\n      database.set(databaseName, conspiracies).then(() => {});\n      await interaction.reply('Added conspiracy!');\n    }else{  \n       let randomElement = conspiracies[Math.floor(Math.random() * conspiracies.length)];\n       await interaction.reply(randomElement)\n    }\n  },\n};\n\n"],
  "mappings": "AAAA,MAAM,EAAC,wBAAuB,QAAQ;AAEtC,MAAM,WAAW,QAAQ;AACzB,MAAM,eAAe;AACrB,MAAM,WAAW,IAAI;AAErB,IAAI;AACJ,SAAS,IAAI,cAAc,KAAK,WAAQ;AAAC,iBAAe;AAAA;AAExD,OAAO,UAAU;AAAA,EACf,MAAM,IAAI,sBACP,QAAQ,cACR,eAAe,6BACf,cAAe,gBACd,WACG,QAAQ,OACR,eAAe,qBACf,gBAAgB,YACf,OAAO,QAAQ,QACd,eAAe,0BACf,YAAY,QAClB,cAAe,gBACd,WACG,QAAQ,QACR,eAAe;AAAA,QAEhB,QAAQ,aAAa;AACzB,QAAI,YAAY,QAAQ,oBAAoB,OAAO;AACjD,mBAAa,KAAK,YAAY,QAAQ,UAAU;AAChD,eAAS,IAAI,cAAc,cAAc,KAAK,MAAM;AAAA;AACpD,YAAM,YAAY,MAAM;AAAA,WACrB;AACF,UAAI,gBAAgB,aAAa,KAAK,MAAM,KAAK,WAAW,aAAa;AACzE,YAAM,YAAY,MAAM;AAAA;AAAA;AAAA;",
  "names": []
}
